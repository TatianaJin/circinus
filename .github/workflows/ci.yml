name: Continuous Integration

on: [push, pull_request_target]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - run: echo "event commit $GITHUB_REF/${GITHUB_SHA}"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Checkout PR HEAD
      if: ${{ GITHUB_EVENT_NAME == 'pull_request_target' }}
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Install dependencies
      run: |
        sudo apt-get install wget build-essential libgflags-dev libgoogle-glog-dev clang-format-3.9 -y

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.8
      with:
        cmake-version: '3.16.x'
        
    - name: Setup GTest
      run: |
        # gtest
        mkdir tmp
        cd tmp
        wget https://github.com/google/googletest/archive/release-1.8.0.tar.gz
        tar -xf release-1.8.0.tar.gz
        cd googletest-release-1.8.0
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_GTEST=1 -DBUILD_GMOCK=0 ..
        sudo make install -j8
        cd ../..

    - name: Check clang-format
      run: ${{github.workspace}}/scripts/clang-format.py
      shell: bash

    - name: CppLint
      run: ${{github.workspace}}/scripts/lint.py | grep "Total errors found. 0"
      shell: bash

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Unit Tests
      working-directory: ${{github.workspace}}/build/tests
      shell: bash
      run: ./circinus_unit_tests

    - name: Test algorithms
      working-directory: ${{github.workspace}}/build/tests
      shell: bash
      run: ./TestVertexCover
